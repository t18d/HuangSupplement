name: Deploy Jekyll site to Pages

on:
  workflow_run:
    workflows:
      - "Process MDs"
      - "Monitor Checklist"
    types: [completed]
  push:
    branches: [main]
    paths:
      - '**.css'
      - '**.webp'
      - '**.svg'
      - '**.woff2'
      - '*.xml'
      - '**.html'
      - '**.pdf'
      - _config.yml
      - .github/workflows/jekyll.yml
      - package-lock.json
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ 
      (github.event_name == 'workflow_run' 
        && github.event.workflow_run.conclusion == 'success') 
      || github.event_name == 'workflow_dispatch' 
      || github.event_name == 'push' 
      }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          sparse-checkout: |
            _includes/
            _layouts/
            build/
            docs/
            dict/
            assets/css/
            assets/js/
            assets/webp/
            assets/font/
            assets/pdf/
            assets/svg/

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 'ruby'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: |
          bundle exec jekyll build \
          --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      #- uses: actions/setup-node@v5
      #  with:
      #    node-version: 'node'
      #    cache: 'npm'
      #    package-manager-cache: true

      #- name: Cache npm
      #  uses: actions/cache@v4
      #  with:
      #    path: ~/.npm
      #    key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache glyphhanger
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          bun install
          pip install -r requirements.txt

      # Explicit per-page caches
      - name: Cache font a
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-a.woff2
          key: cache-a-${{ hashFiles('dict/a.csv') }}
      - name: Cache font b
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-b.woff2
          key: cache-b-${{ hashFiles('dict/b.csv') }}
      - name: Cache font c
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-c.woff2
          key: cache-c-${{ hashFiles('dict/c.csv') }}
      - name: Cache font d
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-d.woff2
          key: cache-d-${{ hashFiles('dict/d.csv') }}
      - name: Cache font e
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-e.woff2
          key: cache-e-${{ hashFiles('dict/e.csv') }}
      - name: Cache font f
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-f.woff2
          key: cache-f-${{ hashFiles('dict/f.csv') }}
      - name: Cache font g
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-g.woff2
          key: cache-g-${{ hashFiles('dict/g.csv') }}
      - name: Cache font h
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-h.woff2
          key: cache-h-${{ hashFiles('dict/h.csv') }}
      - name: Cache font j
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-j.woff2
          key: cache-j-${{ hashFiles('dict/j.csv') }}
      - name: Cache font k
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-k.woff2
          key: cache-k-${{ hashFiles('dict/k.csv') }}
      - name: Cache font l
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-l.woff2
          key: cache-l-${{ hashFiles('dict/l.csv') }}
      - name: Cache font m
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-m.woff2
          key: cache-m-${{ hashFiles('dict/m.csv') }}
      - name: Cache font n
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-n.woff2
          key: cache-n-${{ hashFiles('dict/n.csv') }}
      - name: Cache font o
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-o.woff2
          key: cache-o-${{ hashFiles('dict/o.csv') }}
      - name: Cache font p
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-p.woff2
          key: cache-p-${{ hashFiles('dict/p.csv') }}
      - name: Cache font q
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-q.woff2
          key: cache-q-${{ hashFiles('dict/q.csv') }}
      - name: Cache font r
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-r.woff2
          key: cache-r-${{ hashFiles('dict/r.csv') }}
      - name: Cache font s
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-s.woff2
          key: cache-s-${{ hashFiles('dict/s.csv') }}
      - name: Cache font t
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-t.woff2
          key: cache-t-${{ hashFiles('dict/t.csv') }}
      - name: Cache font w
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-w.woff2
          key: cache-w-${{ hashFiles('dict/w.csv') }}
      - name: Cache font x
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-x.woff2
          key: cache-x-${{ hashFiles('dict/x.csv') }}
      - name: Cache font y
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-y.woff2
          key: cache-y-${{ hashFiles('dict/y.csv') }}
      - name: Cache font z
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-z.woff2
          key: cache-z-${{ hashFiles('dict/z.csv') }}
      - name: Cache font letter
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-letter.woff2
          key: cache-letter-${{ hashFiles('dict/letter.csv') }}
      - name: Cache font obsolete
        uses: actions/cache@v4
        with:
          path: _site/assets/FSung-obsolete.woff2
          key: cache-obsolete-${{ hashFiles('dict/obsolete.csv') }}

      - name: Generate fonts
        run: |
          set -e
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
          for page in a b c d e f g h j k l m n o p q r s t w x y z letter obsolete; do
            html="./_site/$page/index.html"
            csv="dict/$page.csv"
            out="_site/assets/FSung-$page.woff2"

            if [ ! -f "$csv" ] || [ ! -f "$html" ]; then
              echo "Skipping $page (missing $csv or $html)"
              continue
            fi

            if [ -f "$out" ]; then
              echo "Font for $page already cached, skipping."
              continue
            fi

            echo "Generating font for $page..."
            bunx glyphhanger "$html" --jsdom --formats=woff2 \
              --subset=assets/font/*.ttf 2>/dev/null
            fonttools merge assets/font/*subset*
            bunx glyphhanger --subset=merged.ttf --formats=woff2
            cp merged-subset.woff2 "$out"
            rm -f assets/font/*subset* merged*
          done

      - name: Minify HTML/CSS/JS
        uses: docker://devatherock/minify-js:3.1.0
        with:
          directory: './_site'
          add_suffix: false
          exclusions: |-
            assets/js/

      - name: Upload complete site
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
